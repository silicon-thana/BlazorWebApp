@using BlazorWebApp.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject HttpClient Http
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<section class="account-profile">
    <div class="profile">
        <div class="profile-image">
            <img src="/images/uploads/profiles/@User?.ProfileImg" alt="@User?.FirstName @User?.LastName" />
            <EditForm Model="@uploadModel" OnValidSubmit="HandleProfileUpload">
                <InputFile id="fileUploader" OnChange="HandleFileSelected" />
                <label class="btn btn-circle btn-sm">
                    <i class="fa-sharp fa-regular fa-arrows-rotate"></i>
                </label>
            </EditForm>
        </div>
    </div>
</section>

@code {
    [Parameter]
    public ApplicationUser? User { get; set; }
    private FileUploadModel uploadModel = new FileUploadModel();
    private IBrowserFile? selectedFile;

    protected override async Task OnInitializedAsync()
    {
        if (User == null)
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var userIdentity = authState.User;

            if (userIdentity.Identity.IsAuthenticated)
            {
                var userId = userIdentity.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
                if (userId != null)
                {
                    User = await UserManager.FindByIdAsync(userId);
                }
            }
        }
    }

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }

    private async Task HandleProfileUpload()
    {
        if (selectedFile != null && User != null)
        {
            var content = new MultipartFormDataContent();
            var fileContent = new StreamContent(selectedFile.OpenReadStream(selectedFile.Size));
            fileContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(selectedFile.ContentType);
            content.Add(fileContent, "file", selectedFile.Name);

            var response = await Http.PostAsync("https://fileprovider-silicon-thanakorn.azurewebsites.net/api/Upload?code=EPHb-nS8kiQvzlnHKoTHLmSNk_ts4vHfz4IUdYb5Kt5yAzFuAKFdBQ%3D%3D", content);

            if (response.IsSuccessStatusCode)
            {
                var newImageUrl = await response.Content.ReadAsStringAsync();
                User.ProfileImg = newImageUrl;
                await UserManager.UpdateAsync(User);
                Navigation.NavigateTo("/Account/Details", true);
            }
            else
            {
                // Handle error
            }
        }
    }

    public class FileUploadModel
    {
        // Add any properties needed for the form, if necessary
    }
}
